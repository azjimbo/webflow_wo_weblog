| tstats sum(All_Traffic.bytes) as bytes_in  sum(All_Traffic.bytes_out) as bytes_out sum(All_Traffic.packets_in) as packets_in sum(All_Traffic.packets_out) as packets_out count from datamodel="Network_Traffic" 
where All_Traffic.dest_ip=192.168.0.29  ```web server IP goes here```
AND All_Traffic.dest_port IN(80,443) 
AND All_Traffic.src_ip!=192.168.0.0/24   ```exclude internal IPs```
AND NOT All_Traffic.action=blocked
groupby All_Traffic.src_ip, All_Traffic.src_mac _time 
| rename All_Traffic.* AS *

| append  [|  datamodel Intrusion_Detection Network_IDS_Attacks flat  
| search dest=192.168.0.29  ```web server IP goes here``` 
 src!="192.168.0.0/24"  ```exclude internal IPs```
| eval signature=(sourcetype+"->"+signature)
| fields src signature
| rename src AS src_ip ]

| search NOT [| tstats count from datamodel=Web groupby Web.src |rename Web.src AS src_ip 
    | fields src_ip]

| stats earliest(_time) AS firstTime latest(_time) AS lastTime sum(bytes_in) as bytes_in sum(bytes_out) as bytes_out sum(packets_in) as packets_in sum(packets_out) as packets_out
 values(signature) as "signature" count as flows by src_ip
| eval OverMin=round((lastTime-firstTime)/60,2)
| convert ctime(firstTime) ctime(lastTime)
| eval start_stop=(firstTime+" " +lastTime)

| eval clientip=(src_ip)
| lookup dnslookup clientip

| eval bytesPer_pkt_in=(bytes_in/packets_in), bytesPer_pkt_out=(bytes_out/packets_out)

| table src_ip, clienthost start_stop flows  bytesPer_pkt_in bytesPer_pkt_out ```bytes_in bytes_out packets_in packets_out``` signature   OverMin
